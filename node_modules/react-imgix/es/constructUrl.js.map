{"version":3,"sources":["../src/constructUrl.js"],"names":["Base64","require","PACKAGE_VERSION","extractQueryParams","PARAM_EXPANSION","Object","freeze","brightness","contrast","exposure","gamma","highlights","hue","invert","saturation","shaddows","sharpness","vibrance","blend","border","padding","faces","download","DPI","format","quality","orientation","blurring","halftone","monotone","pixelate","height","width","DEFAULT_OPTIONS","auto","constructUrl","src","longOptions","keys","keysLength","length","url","i","key","val","encodeURIComponent","substr","encodeURI","slice","buildURLPublic","imgixParams","options","disableLibraryParam","rawSrc","params","ixlib"],"mappings":"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","sourcesContent":["/*\nCopyright Â© 2015 by Coursera\nLicensed under the Apache License 2.0, seen https://github.com/coursera/react-imgix/blob/master/LICENSE\n\nMinor syntax modifications have been made\n*/\n\nvar Base64 = require(\"js-base64\").Base64;\nconst PACKAGE_VERSION = require(\"../package.json\").version;\nimport extractQueryParams from \"./extractQueryParams\";\n\n// @see https://www.imgix.com/docs/reference\nvar PARAM_EXPANSION = Object.freeze({\n  // Adjustment\n  brightness: \"bri\",\n  contrast: \"con\",\n  exposure: \"exp\",\n  gamma: \"gam\",\n  highlights: \"high\",\n  hue: \"hue\",\n  invert: \"invert\",\n  saturation: \"sat\",\n  shaddows: \"shad\",\n  sharpness: \"sharp\",\n  \"unsharp-mask\": \"usm\",\n  \"unsharp-radius\": \"usmrad\",\n  vibrance: \"vib\",\n\n  // Automatic\n  \"auto-features\": \"auto\",\n\n  // Background\n  \"background-color\": \"bg\",\n\n  // Blend\n  blend: \"blend\",\n  \"blend-mode\": \"bm\",\n  \"blend-align\": \"ba\",\n  \"blend-alpha\": \"balph\",\n  \"blend-padding\": \"bp\",\n  \"blend-width\": \"bw\",\n  \"blend-height\": \"bh\",\n  \"blend-fit\": \"bf\",\n  \"blend-crop\": \"bc\",\n  \"blend-size\": \"bs\",\n  \"blend-x\": \"bx\",\n  \"blend-y\": \"by\",\n\n  // Border & Padding\n  border: \"border\",\n  padding: \"pad\",\n\n  // Face Detection\n  \"face-index\": \"faceindex\",\n  \"face-padding\": \"facepad\",\n  faces: \"faces\",\n\n  // Format\n  \"chroma-subsampling\": \"chromasub\",\n  \"color-quantization\": \"colorquant\",\n  download: \"dl\",\n  DPI: \"dpi\",\n  format: \"fm\",\n  \"lossless-compression\": \"lossless\",\n  quality: \"q\",\n\n  // Mask\n  \"mask-image\": \"mask\",\n\n  // Mask\n  \"noise-blur\": \"nr\",\n  \"noise-sharpen\": \"nrs\",\n\n  // Palette n/a\n  // PDF n/a\n  // Pixel Density n/a\n\n  // Rotation\n  \"flip-direction\": \"flip\",\n  orientation: \"or\",\n  \"rotation-angle\": \"rot\",\n\n  // Size\n  \"crop-mode\": \"crop\",\n  \"fit-mode\": \"fit\",\n  \"image-height\": \"h\",\n  \"image-width\": \"w\",\n\n  // Stylize\n  blurring: \"blur\",\n  halftone: \"htn\",\n  monotone: \"mono\",\n  pixelate: \"px\",\n  \"sepia-tone\": \"sepia\",\n\n  // Trim TODO\n  // Watermark TODO\n\n  // Extra\n  height: \"h\",\n  width: \"w\",\n});\n\nvar DEFAULT_OPTIONS = Object.freeze({\n  auto: \"format\", // http://www.imgix.com/docs/reference/automatic#param-auto\n});\n\n/**\n * Construct a URL for an image with an Imgix proxy, expanding image options\n * per the [API reference docs](https://www.imgix.com/docs/reference).\n * @param  {String} src         src of raw image\n * @param  {Object} longOptions map of image API options, in long or short form per expansion rules\n * @return {String}             URL of image src transformed by Imgix\n */\nfunction constructUrl(src, longOptions) {\n  if (!src) {\n    return \"\";\n  }\n\n  const keys = Object.keys(longOptions);\n  const keysLength = keys.length;\n  let url = src + \"?\";\n  for (let i = 0; i < keysLength; i++) {\n    let key = keys[i];\n    let val = longOptions[key];\n\n    if (PARAM_EXPANSION[key]) {\n      key = PARAM_EXPANSION[key];\n    } else {\n      key = encodeURIComponent(key);\n    }\n\n    if (key.substr(-2) === \"64\") {\n      val = Base64.encodeURI(val);\n    }\n\n    url += key + \"=\" + encodeURIComponent(val) + \"&\";\n  }\n\n  return url.slice(0, -1);\n}\n\nfunction buildURLPublic(src, imgixParams = {}, options = {}) {\n  const { disableLibraryParam } = options;\n\n  const [rawSrc, params] = extractQueryParams(src);\n\n  return constructUrl(\n    rawSrc,\n    Object.assign(\n      {},\n      params,\n      imgixParams,\n      disableLibraryParam ? {} : { ixlib: `react-${PACKAGE_VERSION}` }\n    )\n  );\n}\n\nexport default constructUrl;\n\nexport { buildURLPublic };\n"],"file":"constructUrl.js"}